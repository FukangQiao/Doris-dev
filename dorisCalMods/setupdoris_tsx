#!/bin/sh
##########################################################
# Script that:
#       - Sets up files for Doris 
#       - (Delft Object-oriented Radar Interferometric Software)
#       - NOTE: uses environment variables EDITOR, PAGER (if exist)
#

##########################################################
PROG="doris"                            # executable name in path
PROGDEBUG="doris.debug"                 # executable name in path
PROGINCWD="./processor"                 # executable name in working dir


##########################################################
### Default values for -g option; not used in processing. ###
AUTHOR="Jason Fritz - Colorado State University"      
MASTER="master"
SLAVE="slave"
REMARKS="No remarks"
BASELINE="Unknown"
DATE=`date "+%b %d, %Y (%A)"`           # cannot be changed by input option

### Default directories for input/output ###
INPUTDIR="Inputfiles"                   # directory for input
OUTPUTDIR="Outinfo"                     # directory for output standard out
DATAOUTDIR="Outdata"                    # directory for output matrices
WORKDIR="."                             # don't change?

### Default parameter files/logfile ###
LOGFILE="doris.log"


##########################################################
# To setup Doris software:
#  1) make sure your path is ok.
#  2) create work directory,
#  3) setupdoris_[SARname] -g etc. creates the input etc.
#########################################################
#########################################################
#########################################################
# Script variables.
bn=`basename $0`
EDIT=999
STEP=999
VIEW=999
RESULT=999
INPUT=
INPUT_1=input.m_initial
INPUT_2=input.s_initial
INPUT_3=input.coregistration
INPUT_4=input.resample
INPUT_5=input.products
INPUT_6=input.filter_unwrap
INPUT_7=input.s2h_geocode
#INPUT_8=input.
INPUT_9=input.quicklook
DOGENERATE="0"                  # no default -g ...


# -------------------------------
# Functions for convenience.
NAME()
  {
  echo "   $bn -- Utility for setting up the Delft insar processor."
  }

SYNOPSIS()
  {
  echo "   $bn -M master  -S slave  -P pol -D mode [-B baseline  -R remark  -A author]"
  echo "          /-h"
  echo "  ($bn -h gives more help)"
  }

USAGE()
  {
  echo "Usage:"
  SYNOPSIS
  exit 1
  }

MANPG()
  {
  cat << __MANEOF

  PROGRAM:
  $name


  SYNOPSIS:
  $synopsis


  DESCRIPTION:
    This script is convenient for setting up the Doris InSAR software.
    It generates template input files.

    The environment variables PAGER and EDITOR are used (if set)
    for viewing and editing. In your current setup, the programs
    "$PAGER" and "$EDITOR" are used respectively.
__MANEOF


cat << __MANEOF

  OPTIONS:

==========================
=== GENERATING OPTIONS ===
==========================
    -M  master
                Specify name for master image (e.g., orbit number).
                This variable is used to name the output data files
                and as a comment at the top of the input files. 
                The M_RESFILE is assigned to 'master'.res
                The I_RESFILE is assigned to 'master_slave'.res

    -S  slave
                Specify name for slave image (e.g., orbit number).
                This variable is used to name the output data files
                and as a comment at the top of the input files. 
                The S_RESFILE is assigned to 'slave'.res
                The I_RESFILE is assigned to 'master_slave'.res

    -P pol
    		Specify the polarization (e.g., HH, VV, etc.).
    		This variable is used to name the output data files
    		...
    		
    -D mode 	Specify the beam mode (e.g., stripFar_008).
    
    -A  author
                Only in combination with -g option.
                Specify name of author/ person who is processing.
                Used only as a comment at the top of the input files.

    -B  baseline
                Only in combination with -g option.
                Specify baseline (e.g., 100).
                Used only as a comment at the top of the input files.

    -R  remarks
                Only in combination with -g option.
                Specify any remarks on the processing.
                Used only as a comment at the top of the input files.



==========================
=== EXAMPLES           ===
==========================

    To generate the input files for master 21066, slave 01393,
    with a baseline of about 100m for testing purposes:
      run -M 21066 -S 01393 -P HH -D stripFar_008 -R "Testing generate option" -B 100


==========================
=== AUTHOR             ===
==========================
  Author:
    $bn is written by Bert Kampes, Delft University, (c)1999-2003, b.m.kampes@lr.tudelft.nl.

  Known bugs:
    It is not possible to edit more then one file with the -e option.


  See also:
    helpdoris

  Note: You can edit this script if you want other options, etc.
        Please notify b.m.kampes@lr.tudelft.nl in that case.

__MANEOF
  }



# generate input files------------------
GENERAL()
  {
  cat << __GENERALEOF
# **********************************************************************
# ***  Doris inputfile generated by: $bn at: $DATE *****
# **********************************************************************
# ***
# ***  Filename:        $INPUTDIR/$fn
# ***  Author:          $AUTHOR
# ***  Master:          $MASTER$POL
# ***  Slave :          $SLAVE$POL
# ***  Baseline:        $BASELINE
# ***  Remarks:         $REMARKS
# ***  
# **********************************************************************

########################################################################
# NOTE: BK 16-JUN-2003                                                 #
#   It seems when compiled with g++ 3.2, there cannot be an empty      #
#   optional argument, since instead the first (key) of the next line  #
#   is read.  Therefore, it seems wise to always use arguments, or to  #
#   always have a comment with "//" behind the last argument.          #
#   Of course there must be a way to prevent this, but I don't know how#
########################################################################


#   ------------------------------------------
#   The general options
#   ------------------------------------------

SCREEN          info                    // level of output to standard out
c 					// [trace, debug, info, progress, warning, error]
BEEP            warning                 // level of beeping
PREVIEW         on                      // SUNraster files with cpxfiddle
MEMORY          2000                    // [MB] RAM available to Doris
OVERWRITE       ON                      // do overwrite existing files
BATCH           ON                      // do process non-interactive
LISTINPUT       ON                      // do copy this file to log
c HEIGHT          0.0                     // average WGS84 terrain height
ORB_INTERP      POLYFIT                // 3rd degree polynomial

c DUMPBASELINE  15 10                   // eval baseline on grid
c M_RG_T_ERROR    0.0                   // one-way [sec] timing error
c M_AZ_T_ERROR    0.0                   // azimuth timing error
c S_RG_T_ERROR    0.0                   // one-way [sec]; d_rg=err*rsr*2
c S_AZ_T_ERROR    0.0                   // [sec]; d_az=err*prf [m]
__GENERALEOF
  }


FILES()
  {
  cat << __FILESEOF


#   ------------------------------------------
#   The general io files
#   ------------------------------------------

LOGFILE         $LOGFILE                // log file
M_RESFILE       $MASTERRES              // parameter file master
S_RESFILE       $SLAVERES               // parameter file slave
I_RESFILE       $INTERFRES              // parameter file interferogram

__FILESEOF
  }


GEN_1()
  {
  fn=$INPUT_1
  GENERAL
  FILES
  cat << __GENEOF_1a
PROCESS         m_readfiles             // reading of slc files
c PROCESS         m_porbits               // get precise orbits
PROCESS         m_crop                  // convert data to internal format
PROCESS         m_simamp                // simulate amplitude
c PROCESS         m_timing                // estimate timing error 
PROCESS         m_ovs                 // optionally oversample data (convert to cr4 if 1x1)
__GENEOF_1a
  cat << __GENEOF_1b


#   ------------------------------------------
#      READFILES (master)
#   ------------------------------------------

M_IN_NULL       dummy                           //
M_IN_METHOD    TSX                            // TERRASAR-X
M_IN_DAT       $MASTER${POL}_${MODE}.cos     // please link the actual input file with "ln -s"
M_IN_LEA       $MASTER$METAEXT              


#   ------------------------------------------
#      CROP (master)
#   ------------------------------------------
 
M_CROP_IN     $MASTER${POL}_${MODE}.cos     // please link the actual input file with "ln -s" 
c --and the rest of parameters
M_CROP_OUT      $DATAOUTDIR/$MASTER$POL.raw         // output filename
c M_DBOW        1 5000 1 1000                   // database output window in the radar cordinates
c M_DBOW_GEO      41.1 12.0 5000 1000             // lat_0[deg], lon_0, height, width[pix]


#   ------------------------------------------
#      SIMULATE AMPLITUDE (master)
#   ------------------------------------------
 
SAM_IN_DEM     /mnt/ext/cdt/FL/DEM/KSMdoris/final_KSM.dem
SAM_IN_FORMAT   r4 			 // default is short integer
SAM_IN_SIZE    7201 3601
SAM_IN_DELTA   0.000277778  0.000277778 
SAM_IN_UL      29  -82 
SAM_IN_NODATA  -32768
SAM_OUT_FILE   $MASTER$POL.sam 	 // master simulated amplitude


#   ------------------------------------------
#      TIMING (master)
#   ------------------------------------------

MTE_METHOD    magspace
c MTE_IN_POS  window_locations.txt 
MTE_NWIN      16
MTE_WINSIZE   256 128
MTE_ACC       32 32
MTE_INITOFF   0 0


#   ------------------------------------------
#      OVERSAMPLE (master)
#   ------------------------------------------

M_OVS_OUT         $DATAOUTDIR/${MASTER}${POL}.slc   // output filename              
M_OVS_OUT_FORMAT  cr4       // output format for the oversampled image ci2 | cr4.
M_OVS_FACT_RNG    1         // range oversampling ratio
M_OVS_FACT_AZI    1         // azimuth oversampling ratio (>1 not implemented yet!)
M_OVS_KERNELSIZE  2        // interpolation kernel length 
M_OVS_APPLY_CAL   ON 	// apply calibration to product beta0 images

c                                               //
c                                               //
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_1b
  }
#
#
GEN_2()
  {
  fn=$INPUT_2
  GENERAL
  FILES
  cat << __GENEOF_2a
PROCESS         s_readfiles             // reading of slc files
PROCESS         s_crop                  // convert data to internal format
PROCESS         s_ovs                 // optionally oversample data
__GENEOF_2a
  cat << __GENEOF_2b


#   ------------------------------------------
#      READFILES (slave)
#   ------------------------------------------

S_IN_METHOD    TSX
S_IN_DAT       $SLAVE${POL}_${MODE}.cos    // please link the actual input file with "ln -s"
S_IN_LEA       $SLAVE$METAEXT


#   ------------------------------------------
#      CROP (slave)
#   ------------------------------------------

S_CROP_IN     $SLAVE${POL}_${MODE}.cos      // please link the actual input file with "ln -s"
c --and the rest of parameters
S_CROP_OUT      $DATAOUTDIR/$SLAVE$POL.raw          // output file
c S_DBOW        101 6100 11 1010                // database output window in the radar coordinates
c S_DBOW_GEO      41.1 12.0 5000 1000             // lat_0[deg], lon_0, height, width[pix]


#   ------------------------------------------
#      OVERSAMPLE (slave)
#   ------------------------------------------

S_OVS_OUT             $DATAOUTDIR/${SLAVE}${POL}.slc   // output filename              
S_OVS_OUT_FORMAT      cr4   // output format for the oversampled image ci2 | cr4.
S_OVS_FACT_RNG        1     // range oversampling ratio
S_OVS_FACT_AZI        1     // azimuth oversampling ratio (>1 not implemented yet!)
S_OVS_KERNELSIZE      2    // interpolation kernel length 
S_OVS_APPLY_CAL   ON	// apply calibration to product beta0 images

c
c
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_2b
  }

#
GEN_3()
  {
  fn=$INPUT_3
  GENERAL
  FILES
  cat << __GENEOF_3a
PROCESS         coarseorb               // no cards later
PROCESS         coarsecorr              // based on correlation
c PROCESS       m_filtazi                 // azimuth filter
c PROCESS       s_filtazi                 // azimuth filter
c PROCESS       filtrange               // range filter (orbits)
c -- note that fine requires good initial offset by coarsecorr   --
c -- ..and/or coarseorb.  See the logfile if the coarse offset   --
c -- ..is computed correctly if you have low coherence after fine --
PROCESS         fine                    // fine coregistration
c PROCESS         reltiming               // relative timing error master-slave
__GENEOF_3a
  cat << __GENEOF_3b


#   ------------------------------------------
#      COARSE COREGISTRATION
#   ------------------------------------------

CC_METHOD       magfft                  // default
c CC_METHOD     magspace                // 
CC_NWIN         50                      // number of large windows
CC_WINSIZE      128 128                 // size of windows (square better?)
c CC_INITOFF    0 0                     // initial offset
CC_INITOFF      orbit                   // use result of orbits


#   ------------------------------------------
#      AZIMUTH FILTERING
#   ------------------------------------------

c AF_METHOD                             //
AF_BLOCKSIZE    1024                    // fftlength each column
AF_OVERLAP      64                      // hbs
AF_HAMMING      0.75                    // alpha of hamming, see logfile
AF_OUT_MASTER   $DATAOUTDIR/$MASTER$POL.af
AF_OUT_SLAVE    $DATAOUTDIR/$SLAVE$POL.af
AF_OUT_FORMAT   cr4                     //


#   ------------------------------------------
#      RANGE FILTERING (master&slave)
#   ------------------------------------------

RF_METHOD       porbits                 // based on orbit geometry
RF_SLOPE        0.0                     // [deg] and terrain slope
RF_FFTLENGTH    1024                    // power of 2
RF_HAMMING      0.75                    // 'alpha'
RF_OUT_MASTER   $DATAOUTDIR/$MASTER$POL.rf_orb
RF_OUT_SLAVE    $DATAOUTDIR/$SLAVE$POL.rf_orb
RF_OUT_FORMAT   cr4                     //


#   ------------------------------------------
#      FINE COREGISTRATION
#   ------------------------------------------

c FC_METHOD       magfft                // fast
FC_METHOD     oversample                // best: oversample complex data
c FC_METHOD     magspace                // same as magfft
FC_NWIN         4000                     // number of smaller windows
c FC_IN_POS       highcorr.pos          // filename with window positions
FC_WINSIZE      64 64                   // size of windows
FC_ACC          8 8                     // search window, 2^n
FC_INITOFF      coarsecorr              // use result of coarse
FC_OSFACTOR     32                      // oversampling factor
FC_PLOT         0.4 NOBG                // GMT plot corr >= 0.4 w/o magnitude background


#   ------------------------------------------
#      RELATIVE TIMING ERROR
#   ------------------------------------------

RTE_THRESHOLD  0.4
RTE_MAXITER  10000
RTE_K_ALPHA  1.97


#   ------------------------------------------
#      DEM ASSISTED COREGISTRATION
#   ------------------------------------------
# NOTE: Do not use this in relatively flat regions

DAC_IN_DEM     final_netherlands.dem
DAC_IN_FORMAT  r4        	 // default is short integer
DAC_IN_SIZE    4801 6001
DAC_IN_DELTA   0.000833333  0.000833333 
DAC_IN_UL      54  3 
DAC_IN_NODATA  -32768
c DAC_OUT_DEM    demassist.dem
c DAC_OUT_DEMI   demassist_int.dem
c DAC_OUT_DEM_LP demheight_lp.raw 
 
c                                       //
c                                       //
STOP                                    // mandatory
# vim: syntax=doris
__GENEOF_3b
  }
#
#
GEN_4()
  {
  fn=$INPUT_4
  GENERAL
  FILES
  cat << __GENEOF_4a
c -- note that coregpm requires a threshold, and you may need    --
c -- ..to run step coregpm again.  I put it here as process      --
c -- ..to obtain an automatic processing for my test data.       --
c -- ..but normally you have to remove some points interactively --
c -- ..in an iterative way (i.e., before running "resample).     --
PROCESS         coregpm                 // estimate coregistration param.
PROCESS         resample                // slave
c -- note that filtrange adaptive is recommended to run.         --
PROCESS       filtrange               // master&slave
__GENEOF_4a
  cat << __GENEOF_4b


#   ------------------------------------------
#      COREGISTRATION PARAMETERS MODELING
#   ------------------------------------------

CPM_THRESHOLD   0.3                     // higher threshold->less windows
CPM_DEGREE      2                       // 2d-polynomial 
c CPM_WEIGHT      linear                // or [none]
c CPM_WEIGHT      quadratic             // or [none]
CPM_WEIGHT      bamler                  // paper R.Bamler, IGARSS 2000/2004
CPM_MAXITER     10000                      // automated removal, max 10000 iterations
c CPM_K_ALPHA     1.97                  // automated removal crit. value
CPM_PLOT        NOBG                    // plot w/o magnitude background
c CPM_DUMP      OFF                     // no creation of files


#   ------------------------------------------
#      RESAMPLING SLAVE
#   ------------------------------------------

c --- Interpolation Kernel ---
c RS_METHOD       rc6p                    // best choice (theory 0.9999)
c RS_METHOD       rc12p                 // best choice (theory 0.9999)
RS_METHOD       knab6p                // better than cc6 (theory)
c
c --- Output file ---
RS_OUT_FILE     $DATAOUTDIR/$SLAVE$POL.rslc
RS_OUT_FORMAT   cr4                     //
c RS_DBOW       2000 3000 1 5000        // database output window
c RS_DBOW_GEO     52.6743 5.3434 10000 2000  // lat_0[deg], lon_0, height, width[pix]
RS_SHIFTAZI     on                      // keep this on


#   ------------------------------------------
#      RANGE FILTERING (master&slave)
#   ------------------------------------------

RF_METHOD       adaptive                // estimate local fringe freq.
c RF_FFTLENGTH    8                     // 8 pixels ~ 160m ground range
c RF_FFTLENGTH    32                    // 32 pixels ~ 640m ground range
RF_FFTLENGTH    128                     // 128 pixels ~ 2500m ground range
RF_OVERLAP      50                      // half overlap
RF_OVERSAMPLE   2                       // master/slave before ifg generation
RF_NLMEAN       9                       // must be odd (15 pixels ~ 60m)
RF_THRESHOLD    2                       // SNR spectral peak detection
RF_HAMMING      0.75                    // alpha of Hamming window
RF_WEIGHTCORR   OFF
RF_OUT_MASTER   $DATAOUTDIR/$MASTER$POL.rf_adapt.slc
RF_OUT_SLAVE    $DATAOUTDIR/$SLAVE$POL.rf_adapt.rslc
c RF_OUT_FORMAT   ci2                   // reduce output file size
c                                       //
c                                       //
STOP                                    // mandatory
# vim: syntax=doris
__GENEOF_4b
  }
#
#
GEN_5()
  {
  fn=$INPUT_5
  GENERAL
  FILES
  cat << __GENEOF_5a
PROCESS       interfero                 //
// -- note: compute reference phase after interfero,    --
// -- ..otherwise it is subtracted in INT_METHOD old    --
PROCESS       comprefpha                // estimate flatearth param.
PROCESS       subtrrefpha               //
PROCESS       comprefdem                // synthetic phase from DEM
PROCESS       subtrrefdem               //
PROCESS       coherence                 //
__GENEOF_5a
  cat << __GENEOF_5b


#   ------------------------------------------
#      INTERFEROGRAM
#   ------------------------------------------

INT_METHOD      old                     // 
c INT_METHOD    oversample              // 
INT_OUT_CINT    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.cint // optional complex int.
INT_MULTILOOK   2 3                     // line, pixel factors


#   ------------------------------------------
#      REFERENCE PHASE COMPUTATION
#   ------------------------------------------

FE_METHOD       porbits                 //
c FE_METHOD     method2                 // not implemented?
FE_DEGREE       5                       //
FE_NPOINTS      501                     //


#   ------------------------------------------
#      SUBTRACT REFERENCE PHASE
#   ------------------------------------------

c SRP_METHOD    exact                   // compute foreach pixel
SRP_METHOD    polynomial              // evaluate comprefpha poly
SRP_OUT_CINT    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.srp  //
SRP_MULTILOOK   1 1
c SRP_DUMPREFPHA        ON
c SRP_OUT_REFPHA        $DATAOUTDIR/refphase.cr4  // only output for debug


#   ------------------------------------------
#      REFERENCE DEM
#   ------------------------------------------

CRD_IN_DEM     /mnt/ext/cdt/FL/DEM/KSMdoris/final_KSM.dem
CRD_IN_FORMAT   r4 			 // default is short integer
CRD_IN_SIZE    7201 3601
CRD_IN_DELTA   0.000277778  0.000277778 
CRD_IN_UL      29  -82 
CRD_IN_NODATA  -32768
CRD_OUT_FILE   ${MASTER}_${SLAVE}${POL}.crd 	 // reference dem phase


#   ------------------------------------------
#      SUBTRREF DEM
#   ------------------------------------------

SRD_OUT_CINT    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.srd  //
c                                               //
c                                               //

#   ------------------------------------------
#      COHERENCE
#   ------------------------------------------

c COH_METHOD      refphase_only                 // 
COH_METHOD      include_refdem                  // remove topographic phase also.
c COH_OUT_CCOH  $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.ccoh // optional complex image
COH_OUT_COH     $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.coh  // optional real
COH_MULTILOOK   2 3                            // same as interferogram
COH_WINSIZE     4 6                         // estimator window size
c                                               //
c                                               //
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_5b
  }
#
#
GEN_6()
  {
  fn=$INPUT_6
  GENERAL
  FILES
  cat << __GENEOF_6a
c -- note to set filtparameters correctly, or not to filter. --
c -- ..also set unwrap snaphu to correct model.              --
c -- ..unwrap relies on snaphu to be installed!              --
PROCESS       filtphase                         // filter interferogram
PROCESS       unwrap                            // unwrap interferogram
c PROCESS         dinsar                          // differential interferogram
__GENEOF_6a
  cat << __GENEOF_6b


#   ------------------------------------------
#      PHASE FILTERING
#   ------------------------------------------

c PF_IN_FILE   $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.srp 323  // only for standalone usage
PF_OUT_FILE  $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.cint.filtered
PF_METHOD    spatialconv
PF_KERNEL    5 1 1 1 1 1
c c PF_KERNEL    5 1 4 9 4 1
c c PF_KERNEL    3 -1 1 0
c c PF_IN_KERNEL2D    myfilt.asc
 c
PF_METHOD    goldstein
PF_KERNEL    5 1 2 3 2 1  // Default goldstein kernel
PF_ALPHA     0.8
PF_BLOCKSIZE 32
PF_OVERLAP   6
c PF_KERNEL    5 1 1 1 1 1


#   ------------------------------------------
#      PHASE UNWRAPPING
#   ------------------------------------------

UW_OUT_FILE     $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.uint // unwrapped interferogram
c UW_OUT_REGIONS    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.regions // 2b used with manuw.m
UW_METHOD         SNAPHU
UW_OUT_FORMAT     HGT
UW_SNAPHU_LOG     snaphu.log
UW_SNAPHU_coh     $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.coh
UW_SNAPHU_MODE    TOPO
UW_SNAPHU_INIT    MST
UW_SNAPHU_VERBOSE ON


#   ------------------------------------------
#      DIFFERENTIAL INSAR
#   ------------------------------------------

DI_OUT_FILE     $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.dcint // differential
DI_IN_TOPOSLAVE  topodir/slave.res
DI_IN_TOPOINT    topodir/products.res
c DI_IN_TOPOMASTER topodir/master.res           // 4 pass
c DI_OUT_SCALED   debug.raw
c                                               //
c                                               //
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_6b
  }
#
#
GEN_7()
  {
  fn=$INPUT_7
  GENERAL
  FILES
  cat << __GENEOF_7a
c PROCESS         slant2h                         //
PROCESS         geocode                         //
__GENEOF_7a
  cat << __GENEOF_7b


#   ------------------------------------------
#      SLANT TO HEIGHT CONVERSION
#   ------------------------------------------

c 
c S2H_METHOD      ambiguity                       //
c S2H_METHOD      rodriguez                       //
c S2H_METHOD      schwabisch                      // adviced!
S2H_NPOINTS   0                             // force failure so it just writes block to res
c S2H_NPOINTS   200                             //
S2H_DEGREE1D  2                               //
S2H_NHEIGHTS  3                               //
S2H_DEGREE2D  5                               //

S2H_OUT_HEI 	$DATAOUTDIR/refdem_pha.raw 	// Use reference DEM as height to geocode
c S2H_OUT_HEI     $DATAOUTDIR/heights.raw         //
C S2H_OUT_HEI     $DATAOUTDIR/s2h_heights.raw         //
C S2H_OUT_LAM     $DATAOUTDIR/s2h_lambda.raw      //
C S2H_OUT_PHI     $DATAOUTDIR/s2h_phi.raw         //


#   ------------------------------------------
#      GEOCODING
#   ------------------------------------------

GEO_OUT_PHI     $DATAOUTDIR/lats.dat             //
GEO_OUT_LAM     $DATAOUTDIR/lons.dat          //
c                                               //
c                                               //
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_7b
  }
#
#
GEN_8()
  {
  fn=$INPUT_8
  GENERAL
  FILES
  cat << __GENEOF_8a
PROCESS         ???
__GENEOF_8a
  cat << __GENEOF_8b


#   ------------------------------------------
#      ??
#   ------------------------------------------

c CARDS GO HERE
c CARDS GO HERE
c CARDS GO HERE
c                                               //
c                                               //
STOP                                            // mandatory
__GENEOF_8b
  }
#
#
GEN_9()
  {
  fn=$INPUT_9
  cat << __GENEOF_9a
######################################################################################
### This is a (full scene) quicklook processing.  To quickly see the ifg etc,      ###
### use "run -ql (or equivalently run -s9)".                                       ###
###  this will run -s1; run -s2; run -s9 (i.e, read files, process them            ###
### Therefore, also edit step1,2 input (run -e1; run -e2) to set input filenames.  ###
### You can set the DBOW crop there.   If master.res or slave.res already exist    ###
### then these steps are skipped.                                                  ###
###                                                                                ###
### Basically we read the data, then automated coregistration with lower quality,  ###
### fast resampling to short output format, and form the interferogram, flatten it ###
### and compute the coherence image, all heavily multilooked.                      ###
### NO spektral filtering. Experimental...                                         ###
###                                                                                ###
### This takes about 6 minutes for a quarter scene.                                ###
###                                                                                ###
###%// BK 15-Sep-2003                                                              ###
######################################################################################
SCREEN        info                    // level of output to standard out
BEEP          warning                 // level of beeping
PREVIEW       on                      // SUNraster files with cpxfiddle
MEMORY        1000                     // MB
OVERWRITE     ON                      // overwrite existing files
BATCH         ON                      // non-interactive
LISTINPUT     ON                      // copy this file to log
ORB_INTERP    POLYFIT 3               // orbit interpolation method
LOGFILE       quicklook.log              //
M_RESFILE     master_QL.res           // after run -s1, run -s2 the files are 
S_RESFILE     slave_QL.res            // copied to these
I_RESFILE     ifg_QL.res              // names
###
###
PROCESS       coarseorb               // no cards later
PROCESS       coarsecorr              // based on correlation
PROCESS       fine                    // fine coregistration
PROCESS       coregpm                 // estimate coregistration param.
PROCESS       resample                // slave
PROCESS       interfero               //
PROCESS       comprefpha              // estimate flatearth param.
PROCESS       subtrrefpha             //
PROCESS       coherence               //
###
###
CC_METHOD       magfft                  // default
CC_NWIN         21                      // number of windows
CC_WINSIZE      256 256                 // size of large windows
CC_INITOFF      orbit                   // use result of orbits
###
###
FC_METHOD       magfft                  //
FC_NWIN         501                     // number of windows
FC_WINSIZE      64 64                   // size of small windows
FC_ACC          8 8                     // search window, 2^n
FC_INITOFF      coarsecorr              // use result of coarse
FC_OSFACTOR     8                       // oversampling factor
###
###
CPM_THRESHOLD   0.2                     //
CPM_DEGREE      2                       //
CPM_WEIGHT      quadratic               // none | linear | quadratic
CPM_MAXITER     350                     // automated removal, max 20 iterations
CPM_K_ALPHA     5.00                    // automated removal crit. value
###
###
RS_METHOD       tri                     // linear interpolation
RS_OUT_FILE     $DATAOUTDIR/$SLAVE${POL}.resampled_QL
RS_OUT_FORMAT   ci2                     //
RS_SHIFTAZI     off                     // doppler
###
###
INT_METHOD      old                     // 
INT_OUT_CINT    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.cint_QL // optional complex int.
INT_MULTILOOK   8 8                    // 20 x 20 m
###
###
FE_METHOD       porbits                 //
FE_DEGREE       5                       //
FE_NPOINTS      301                     //
###
###
SRP_OUT_CINT    $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.srp_QL  //
SRP_MULTILOOK   3 3                     // total 60x60 m
###
###
COH_METHOD      refphase_only                   // options: refphase_only or include_refdem
COH_OUT_COH     $DATAOUTDIR/${MASTER}_${SLAVE}${POL}.coh_QL  // optional real
COH_MULTILOOK   24 24                            //
COH_WINSIZE     24 24                            //
###
STOP                                            // mandatory
# vim: syntax=doris
__GENEOF_9a
  }


GENERATE()
  {
#BK 19-Jan-2001: set resultfiles -M -S option
MASTERRES="$MASTER$POL.res"
SLAVERES="$SLAVE$POL.res"
INTERFRES="${MASTER}_${SLAVE}$POL.res"

# Workdir
if [ ! -d $WORKDIR ]; then
  mkdir $WORKDIR
  echo "${bn}: ***INFO***    workdir: $WORKDIR created."
fi
# Directory where input prototypes are stored.
if [ -d $INPUTDIR ]; then
  echo "${bn}: ***WARNING*** inputdir: $INPUTDIR existed, I renamed it to $INPUTDIR.$$."
  mv -f $INPUTDIR $INPUTDIR.$$
fi
mkdir $INPUTDIR

# Output directory for redirected standard output.
if [ -d $OUTPUTDIR ]; then
  echo "${bn}: ***WARNING*** outputdir: $OUTPUTDIR existed, I renamed it to $OUTPUTDIR.$$"
  mv -f $OUTPUTDIR $OUTPUTDIR.$$
fi
mkdir $OUTPUTDIR

# Output directory for matrices.
if [ ! -d $DATAOUTDIR ]; then
  mkdir $DATAOUTDIR
fi

# Test if executable is present.
#if [ ! -x $SWDIR/$PROG ]; then
#  echo "executable: $SWDIR/$PROG not present."
#  if [ ! -x $WORKDIR/$PROG ]; then
#    echo "also not in workdir: $WORKDIR, exiting."
#    exit 4
#  fi
#  echo "Continuing"
#fi
#if [ -x $WORKDIR/$PROG ]; then
#  echo "executable already present in: $WORKDIR/$PROG, I renamed it to $WORKDIR/$PROG.$$"
#  mv -f $WORKDIR/$PROG $WORKDIR/$PROG.$$
#fi

#  cp   $SWDIR/$PROG    $WORKDIR/$PROG
  GEN_1 > $INPUTDIR/$INPUT_1
  GEN_2 > $INPUTDIR/$INPUT_2
  GEN_3 > $INPUTDIR/$INPUT_3
  GEN_4 > $INPUTDIR/$INPUT_4
  GEN_5 > $INPUTDIR/$INPUT_5
  GEN_6 > $INPUTDIR/$INPUT_6
  GEN_7 > $INPUTDIR/$INPUT_7
#  GEN_8 > $INPUTDIR/$INPUT_8
  GEN_9 > $INPUTDIR/$INPUT_9

  echo "${bn}: ***INFO***    generation of inputfiles finished."
  echo "${bn}: ***INFO***    inputdir:   $INPUTDIR"
  echo "${bn}: ***INFO***    outputdir (stout):  $OUTPUTDIR"
  echo "${bn}: ***INFO***    outputdir (matrices):  $DATAOUTDIR"
#
# BK 25-feb-2000
# 2nd check is not ok, should check with whence?
#
if [ -x $PROGINCWD ]; then
  echo "${bn}: ***INFO***    Using executable in cwd: $PROGINCWD"
else
  echo "${bn}: ***INFO***    Using executable in path:  $PROG"
  echo "${bn}: ***INFO***    or (if -d option present): $PROGDEBUG"
fi
  echo "${bn}: ***TIP***     run -e1; run -s1"
  exit 0
  }


##################################################
# START SCRIPT ---------------
# Set viewer (if no default environment variables: PAGER and EDITOR) ###
# Set PAGER (VIEWER) and EDITOR if not default (prefer less and nedit)
if [ "X$PAGER" = "X" ]; then
  #default should be specified in your login resource file.
  echo "environment variable PAGER not set, please set this variable"
  echo "to specify your prefered viewer.  For example in csh shell type:"
  echo " setenv PAGER more"
  echo " setenv PAGER less   (adviced)"
  #PAGER="more"
  PAGER="less"
  $PAGER 2>&1
  if [ "$status" = "0" ]; then
    echo "PAGER: $PAGER found in path..."
  else
    PAGER="more"
    echo "using PAGER $PAGER"
  fi
fi
VIEWER="$PAGER"
if [ "X$EDITOR" = "X" ]; then
  #default should be specified in your login resource file.
  echo "environment variable EDITOR not set, please set this variable"
  echo "to specify your prefered editor.  For example in csh shell type:"
  echo " setenv EDITOR vi"
  echo " setenv EDITOR nedit"
  echo " setenv EDITOR xemacs"
  EDITOR="nedit"
  $EDITOR 2>&1
  if [ "$status" = "0" ]; then
    echo "EDITOR: $EDITOR found in path..."
  else
    EDITOR="vi"
    echo "using EDITOR $EDITOR"
  fi
fi

# Assume template inputfile are generated, obtain name of files...
# only for view?
if [ "$DOGENERATE" = "0" ]; then
  if [ -r $INPUTDIR/$INPUT_1 ]; then
    MASTERRES=`awk '/M_RESFILE/ {print $2}' $INPUTDIR/$INPUT_1`
    SLAVERES=`awk  '/S_RESFILE/ {print $2}' $INPUTDIR/$INPUT_1`
    INTERFRES=`awk '/I_RESFILE/ {print $2}' $INPUTDIR/$INPUT_1`
  fi
fi

# Help wanted?
#if [ $# -eq 1 -a "$1" = "-h" ]; then
if [ "$1" = "-h" ]; then
  name=`NAME`
  synopsis=`SYNOPSIS`
  MANPG | $PAGER
  exit
fi

DOGENERATE="1" 

### Simple options parsing by bert... since getopts not known on my cygwin sh shell (?)
### This is slower and not tested properly like lib function, but seems to work.
### Also it doesn't incorporate numargs exceptions checks.
### Bert Kampes, 03-Feb-2002.
#1) delete all spaces from input option string, delimiters are - signs
#2) insert spaces before - signs (use QQQ to keep spaces in OPTARG)
#3) for each word, obtain option and argument
#INPUTARGS=`echo "$*" | sed 's/ /QQQ/g' | sed 's/-/ -/g'`
INPUTARGS=`echo "$*" | sed 's/ //g' | sed 's/-/ -/g'`
for OPTION in $INPUTARGS; do
  OPTKEY=`echo $OPTION | awk '{print substr($1,1,2)}'`
  OPTARG=`echo $OPTION | awk '{print substr($1,3)}'`
#  OPTARG=`echo $OPTION | awk '{print substr($1,3)}' | sed 's/QQQ/ /g'`
#  echo "OPTKEY: "XXX${OPTKEY}XXX
#  echo "OPTARG: "XXX${OPTARG}XXX
#  if test "$OPTKEY"="-f"; then
#    INPUT="$OPTARG"
#  fi
### quicklook run step 9
  case $OPTKEY in
    -f)   INPUT=$OPTARG                 ;;
#    -d)   PROG=$PROGDEBUG               ;;
#    -s)   STEP=$OPTARG                  ;;
#    -q)   STEP=9                        ;;
#    -e)   EDIT=$OPTARG                  ;;
#    -v)   VIEW=$OPTARG                  ;;
#    -r)   RESULT=$OPTARG                ;;
#    -g)   DOGENERATE="1"                ;;
    -M)   MASTER=$OPTARG                ;;
    -S)   SLAVE=$OPTARG                 ;;
    -A)   AUTHOR=$OPTARG                ;;
    -B)   BASELINE=$OPTARG              ;;
    -R)   REMARKS=$OPTARG               ;;
    -P)   POL='_'$OPTARG 			;;
    -D)   MODE=$OPTARG			;;
    -h)  USAGE                          ;;
    \?)  USAGE                          ;;
    *)   echo "wrong input argument"; USAGE             ;;
  esac
done

METAEXT='_metadata.xml'

# Check any input.
if [ "$1" = "" ]; then
  USAGE
fi

# -g option.
if [ "$DOGENERATE" = "1" ]; then
  GENERATE
fi



exit 0

#############
